apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "minio.fullname" . }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "minio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "minio.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "minio.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: bucket-creator
          image: alpine
          command:
            - mkdir
            - -p
            - /data/prow-logs
            - /data/tide
            - /data/status-reconciler
          volumeMounts:
            - name: data
              mountPath: "/data"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - server
          - /data
          env:
          - name: MINIO_ROOT_USER
            value: "{{ .Values.prow.minioRootUser }}"
          - name: MINIO_ROOT_PASSWORD
            value: "{{ .Values.prow.minioRootPassword }}"
          - name: MINIO_REGION_NAME
            value: "{{ .Values.prow.minioRegion }}"
          ports:
            - name: http
              containerPort: 9000
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: http
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: http
          volumeMounts:
            - name: data
              mountPath: "/data"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
