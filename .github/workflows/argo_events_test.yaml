# verify with local kind k8s cluster.
name: Argo events E2E test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      - "argo/events/**"
      - ".github/workflows/argo_events_*"

jobs:
  kubernetes:
    runs-on: ubuntu-latest   
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Kubernetes
        uses: engineerd/setup-kind@v0.5.0
        with:
          # renovate: datasource=go depName=sigs.k8s.io/kind
          version: v0.11.0
      - name: Install Argo Workflow in Kubernetes cluster
        run: |
          kubectl create namespace argo
          kubectl -n argo apply -f https://raw.githubusercontent.com/argoproj/argo-workflows/master/manifests/install.yaml

          # wait all be ready
          kubectl -n argo wait deploy --all --for condition=Available --timeout 5m
      - name: Install Argo Events in Kubernetes cluster
        run: |
          kubectl create namespace argo-events
          kubectl -n argo-events apply -f https://raw.githubusercontent.com/argoproj/argo-events/master/manifests/install.yaml
          kubectl -n argo-events apply -f https://raw.githubusercontent.com/argoproj/argo-events/stable/examples/eventbus/native.yaml

          # sensor rbac 
          kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/rbac/sensor-rbac.yaml
          # workflow rbac
          kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/rbac/workflow-rbac.yaml 

          # webhook event source
          kubectl -n argo-events apply -f https://raw.githubusercontent.com/argoproj/argo-events/stable/examples/event-sources/webhook.yaml
          # webhook sensor
          kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/stable/examples/sensors/webhook.yaml

          # wait all be ready
          kubectl -n argo wait deploy --all --for condition=Available --timeout 5m          
      - name: Trigger webhook event using k8s job.
        run: |
          kubectl -n default create job sendwebhook --image=curlimages/curl -- curl \
            -X POST \
            -d '{"message":"this is my first webhook"}' \
            -H "Content-Type: application/json" \
            http://webhook-eventsource-svc.argo-events:12000/example
          kubectl -n default wait job/sendwebhook --for=condition=completed --timeout=1m
      - name: Verify event trigger feature
        run: kubectl -n argo-events wait workflows --all --for=condition=Completed --timeout=1m
      - name: Debug failure
        if: failure()
        run: |
          kubectl -n argo get all
          kubectl -n argo describe all
          kubectl -n argo-events get all
          kubectl -n argo-events describe all
